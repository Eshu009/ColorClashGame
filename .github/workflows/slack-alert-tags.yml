name: slack-tag-events

on:
  push:
    tags:
      - "v*"  # Matches any tag starting with "v"

jobs:
  slack:
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack Notification
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_HOOK_URL }}
        run: |
          # Extract event data
          EVENT_TYPE="${{ github.event_name }}"
          REF="${{ github.ref }}"
          ACTOR="${{ github.actor }}"
          REPO_NAME="${{ github.repository }}"
          REPO_URL="https://github.com/${{ github.repository }}"
          TAG_NAME="${REF#refs/tags/}"
          TAG_URL="https://github.com/${{ github.repository }}/releases/tag/${TAG_NAME}"
          TIMESTAMP=$(date -u)

          # Determine action type
          if [[ "$EVENT_TYPE" == "push" && "$GITHUB_EVENT_BEFORE" == "0000000000000000000000000000000000000000" ]]; then
            ACTION="Created"
          elif [[ "$EVENT_TYPE" == "push" && "$GITHUB_EVENT_AFTER" == "0000000000000000000000000000000000000000" ]]; then
            ACTION="Deleted"
          fi

          # Get release information (only for creation)
          RELEASE_NAME="None"
          if [[ "$ACTION" == "Created" ]]; then
            RELEASE_NAME=$(curl -s \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/releases/tags/${TAG_NAME}" | \
              jq -r '.name // "None"')
          fi

          # Prepare the message blocks
          SLACK_MESSAGE="{
            \"blocks\": [
              {
                \"type\": \"header\",
                \"text\": {
                  \"type\": \"plain_text\",
                  \"text\": \"Tag Event: $ACTION\",
                  \"emoji\": true
                }
              },
              {
                \"type\": \"section\",
                \"fields\": [
                  {
                    \"type\": \"mrkdwn\",
                    \"text\": \"*Tag Name:* <$TAG_URL|$TAG_NAME>\"
                  },
                  {
                    \"type\": \"mrkdwn\",
                    \"text\": \"*Action:* $ACTION\"
                  },
                  {
                    \"type\": \"mrkdwn\",
                    \"text\": \"*User:* $ACTOR\"
                  },
                  {
                    \"type\": \"mrkdwn\",
                    \"text\": \"*Repository:* <$REPO_URL|$REPO_NAME>\"
                  },
                  {
                    \"type\": \"mrkdwn\",
                    \"text\": \"*Timestamp:* $TIMESTAMP\"
                  }
                ]
              }"

          # Include release information only if the tag is created
          if [[ "$ACTION" == "Created" ]]; then
            SLACK_MESSAGE="${SLACK_MESSAGE}, 
              {
                \"type\": \"section\",
                \"fields\": [
                  {
                    \"type\": \"mrkdwn\",
                    \"text\": \"*Release:* $RELEASE_NAME\"
                  }
                ]
              }"
          fi

          # Close the JSON structure for the Slack message
          SLACK_MESSAGE="${SLACK_MESSAGE}
            ]
          }"

          # Send the message to Slack
          curl -X POST \
            -H 'Content-type: application/json; charset=utf-8' \
            --data "$SLACK_MESSAGE" \
          $SLACK_WEBHOOK_URL
