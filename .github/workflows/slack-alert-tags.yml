name: slack-tag-events

on:
  create:
    tags:
      - "*"
  delete:
    tags:
      - "*"
  release:
    types:
      - edited

jobs:
  slack:
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack Notification
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_HOOK_URL }}
        run: |
          # Extract event data
          EVENT_TYPE="${{ github.event_name }}"
          REF="${{ github.event.ref }}"
          ACTOR="${{ github.actor }}"
          REPO_NAME="${{ github.repository }}"
          REPO_URL="https://github.com/${{ github.repository }}"
          TAG_URL="https://github.com/${{ github.repository }}/releases/tag/${REF#refs/tags/}"
          TIMESTAMP=$(date -u)

          # Determine action type
          if [[ "$EVENT_TYPE" == "create" ]]; then
            ACTION="Created"
          elif [[ "$EVENT_TYPE" == "delete" ]]; then
            ACTION="Deleted"
          elif [[ "$EVENT_TYPE" == "release" && "${{ github.event.action }}" == "edited" ]]; then
            ACTION="Release Modified"
          fi

          # Get release information (if applicable)
          RELEASE_NAME="None"
          RELEASE_URL=""
          if [[ "$ACTION" == "Created" ]]; then
            # Use GitHub API to get release information for the tag
            RELEASE_NAME=$(curl -s \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              "https://api.github.com/repos/${{ github.repository }}/releases/tags/${REF#refs/tags/}" | \
              jq -r '.name // "None"')
            RELEASE_URL="https://github.com/${{ github.repository }}/releases/tag/${REF#refs/tags/}"
          fi

          # Get release notes modification details if action is "Release Modified"
          RELEASE_MODIFIED_USER=""
          RELEASE_MODIFIED_NOTES=""
          if [[ "$ACTION" == "Release Modified" ]]; then
            RELEASE_MODIFIED_USER="${{ github.actor }}"
            RELEASE_MODIFIED_NOTES="${{ github.event.release.body }}"
            RELEASE_URL="https://github.com/${{ github.repository }}/releases/${{ github.event.release.id }}"
          fi

          # Send message to Slack
          curl -X POST \
            -H 'Content-type: application/json; charset=utf-8' \
            --data "{
              \"blocks\": [
                {
                  \"type\": \"header\",
                  \"text\": {
                    \"type\": \"plain_text\",
                    \"text\": \"Tag Event: $ACTION\",
                    \"emoji\": true
                  }
                },
                {
                  \"type\": \"section\",
                  \"fields\": [
                    {
                      \"type\": \"mrkdwn\",
                      \"text\": \"*Tag Name:* <${TAG_URL}|$REF>\"
                    },
                    {
                      \"type\": \"mrkdwn\",
                      \"text\": \"*Action:* $ACTION\"
                    },
                    {
                      \"type\": \"mrkdwn\",
                      \"text\": \"*User:* $ACTOR\"
                    },
                    {
                      \"type\": \"mrkdwn\",
                      \"text\": \"*Repository:* <$REPO_URL|$REPO_NAME>\"
                    },
                    {
                      \"type\": \"mrkdwn\",
                      \"text\": \"*Timestamp:* $TIMESTAMP\"
                    }
                  ]
                }
                $(if [[ "$ACTION" == "Release Modified" ]]; then echo ",{
                  \"type\": \"section\",
                  \"fields\": [
                    {
                      \"type\": \"mrkdwn\",
                      \"text\": \"*Release Modified by:* $RELEASE_MODIFIED_USER\"
                    },
                    {
                      \"type\": \"mrkdwn\",
                      \"text\": \"*Modified Notes:* $RELEASE_MODIFIED_NOTES\"
                    },
                    {
                      \"type\": \"mrkdwn\",
                      \"text\": \"*Release URL:* <$RELEASE_URL|$RELEASE_NAME>\"
                    }
                  ]
                }"; fi)
              ]
            }" \
          $SLACK_WEBHOOK_URL
